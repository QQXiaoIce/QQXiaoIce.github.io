<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>如何使用hexo-encrypt插件对Hexo博客进行加密</title>
    <link href="/hexo-encrypt-tutorial/"/>
    <url>/hexo-encrypt-tutorial/</url>
    
    <content type="html"><![CDATA[<hr><hr><h3 id="入个使用hexo-encrypt-插件加密Hexo博客"><a href="#入个使用hexo-encrypt-插件加密Hexo博客" class="headerlink" title="入个使用hexo-encrypt 插件加密Hexo博客"></a>入个使用hexo-encrypt 插件加密Hexo博客</h3><p>Hexo 文章加密可以帮助你保护私密内容，确保只有知道密码的用户才能访问。本文将介绍如何使用 <strong>hexo-encrypt</strong> 插件实现 Hexo 博客的文章加密。</p><hr><h3 id="1-安装-hexo-encrypt-插件"><a href="#1-安装-hexo-encrypt-插件" class="headerlink" title="1. 安装 hexo-encrypt 插件"></a>1. 安装 hexo-encrypt 插件</h3><p>首先，在你的 Hexo 博客根目录下打开终端，运行以下命令安装 <strong>hexo-encrypt</strong> 插件：</p><p>Bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-encrypt --save<br></code></pre></td></tr></table></figure><hr><h3 id="2-配置-config-yml"><a href="#2-配置-config-yml" class="headerlink" title="2. 配置 _config.yml"></a>2. 配置 _config.yml</h3><p>安装完成后，打开你 Hexo 博客根目录下的 <strong>_config.yml</strong> 文件，添加或修改以下配置：</p><p>YAML</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Hexo Encrypt</span><br><span class="hljs-attr">encrypt:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 启用加密功能</span><br>  <span class="hljs-attr">default_password:</span> <span class="hljs-string">your_default_password</span> <span class="hljs-comment"># 可选：设置一个默认密码，如果你不想为每篇文章单独设置密码</span><br>  <span class="hljs-attr">abstract:</span> <span class="hljs-string">这里有一些加密的内容，需要密码才能继续阅读。</span> <span class="hljs-comment"># 加密文章的摘要提示</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">嘿，这里需要密码才能访问。</span> <span class="hljs-comment"># 密码输入框上方的提示信息</span><br>  <span class="hljs-attr">tags:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">private</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-string">your_tag_password</span> <span class="hljs-comment"># 该标签的密码</span><br>  <span class="hljs-attr">wrong_pass_message:</span> <span class="hljs-string">哦，这是一个无效的密码，请检查并重试。</span> <span class="hljs-comment"># 密码错误提示</span><br>  <span class="hljs-attr">wrong_hash_message:</span> <span class="hljs-string">哦，这些解密内容无法验证，但你仍然可以查看。</span> <span class="hljs-comment"># 哈希校验失败提示</span><br>  <span class="hljs-comment"># silent: true # 如果设置为 true，将禁用加密相关的日志输出</span><br></code></pre></td></tr></table></figure><p>请注意：</p><ul><li>将 <code>your_default_password</code> 替换为你希望设置的默认密码。如果不需要默认密码，可以删除这一行。</li><li><code>abstract</code>、<code>message</code>、<code>wrong_pass_message</code> 和 <code>wrong_hash_message</code> 都可以根据你的需求自定义。</li><li>对于 <code>tags</code> 部分，将 <code>your_tag_password</code> 替换为你希望为带有 <code>private</code> 标签的文章设置的密码。你可以根据需要添加更多标签及其对应的密码。</li></ul><hr><h3 id="3-加密文章"><a href="#3-加密文章" class="headerlink" title="3. 加密文章"></a>3. 加密文章</h3><p>你可以通过两种主要方式加密文章：为单篇文章设置密码，或利用 <code>_config.yml</code> 中的配置为多篇文章设置默认密码或基于标签的密码。</p><h4 id="方法一：为单篇文章设置密码"><a href="#方法一：为单篇文章设置密码" class="headerlink" title="方法一：为单篇文章设置密码"></a>方法一：为单篇文章设置密码</h4><p>在你的 Hexo 文章的 Markdown 文件（例如 <code>source/_posts/your-post.md</code>）的头部（Front-matter）添加 <code>password</code> 字段，并设置你的密码：</p><p>Markdown</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 我的加密文章<br>date: 2023-10-27 10:00:00<br>tags:<br><span class="hljs-bullet">  -</span> 加密<br><span class="hljs-bullet">  -</span> 私密<br><span class="hljs-section">password: your<span class="hljs-emphasis">_article_</span>password # 这篇文章的密码</span><br><span class="hljs-section">---</span><br><br>这是这篇文章的秘密内容。只有输入正确密码才能看到。<br></code></pre></td></tr></table></figure><p>将 <code>your_article_password</code> 替换为你希望为该文章设置的密码。这种方法会覆盖 <code>_config.yml</code> 中设置的默认密码或标签密码，确保该文章只使用此特定密码。</p><h4 id="方法二：利用-config-yml-中的默认密码或标签密码"><a href="#方法二：利用-config-yml-中的默认密码或标签密码" class="headerlink" title="方法二：利用 _config.yml 中的默认密码或标签密码"></a>方法二：利用 <code>_config.yml</code> 中的默认密码或标签密码</h4><p>a. 使用默认密码：</p><p>如果你在 _config.yml 中设置了 default_password，并且想使用这个默认密码加密文章，那么你无需在文章的 Front-matter 中添加 password 字段。文章内容会自动应用你配置的默认密码。</p><p>b. 使用标签密码：</p><p>如果你在 _config.yml 的 tags 部分为某个标签（例如 private）设置了密码，那么任何带有该标签的文章都会被加密。你只需在文章的 Front-matter 中添加对应的标签即可：</p><p>Markdown</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs markdown">---<br>title: 我的私密文章<br>date: 2023-10-27 10:00:00<br>tags:<br><span class="hljs-section">  - private # 这篇文章将使用 `<span class="hljs-emphasis">_config.yml` 中 `private` 标签对应的密码</span></span><br><span class="hljs-emphasis"><span class="hljs-section">---</span></span><br><span class="hljs-emphasis"><span class="hljs-section"></span></span><br><span class="hljs-emphasis"><span class="hljs-section">这是这篇私密文章的内容。</span></span><br></code></pre></td></tr></table></figure><hr><h3 id="4-生成和部署博客"><a href="#4-生成和部署博客" class="headerlink" title="4. 生成和部署博客"></a>4. 生成和部署博客</h3><p>完成上述配置后，保存所有文件。然后，在你的 Hexo 博客根目录下运行以下命令，生成并部署你的博客：</p><p>Bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>现在，当访问你加密的文章时，页面上将显示密码输入框，只有输入正确的密码才能查看文章内容。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>加密</tag>
      
      <tag>hexo-encrypt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>wallhaven爬虫</title>
    <link href="/wallhaven-web-crawler-guide/"/>
    <url>/wallhaven-web-crawler-guide/</url>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">WallHaven图片爬虫 (安全优化版)</span><br><span class="hljs-string">优化内容：</span><br><span class="hljs-string">1. 移除页面范围自定义逻辑</span><br><span class="hljs-string">2. 简化配置参数</span><br><span class="hljs-string">3. 保持编码安全性和日志兼容性</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> logging<br><span class="hljs-keyword">from</span> time <span class="hljs-keyword">import</span> sleep<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> uniform<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> html<br><span class="hljs-keyword">from</span> typing <span class="hljs-keyword">import</span> <span class="hljs-type">Optional</span><br><br><span class="hljs-comment"># ------------------------- 配置类 -------------------------</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">SpiderConfig</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;爬虫基础配置&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-comment"># 网络配置</span><br>        <span class="hljs-variable language_">self</span>.base_url = <span class="hljs-string">&quot;https://wallhaven.cc/search&quot;</span><br>        <span class="hljs-variable language_">self</span>.<span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;48868&quot;</span><br>        <span class="hljs-variable language_">self</span>.timeout = <span class="hljs-number">15</span><br>        <span class="hljs-variable language_">self</span>.retries = <span class="hljs-number">3</span><br>        <span class="hljs-variable language_">self</span>.delay = (<span class="hljs-number">1</span>, <span class="hljs-number">3</span>)  <span class="hljs-comment"># 随机延迟范围</span><br><br>        <span class="hljs-comment"># 分页配置</span><br>        <span class="hljs-variable language_">self</span>.max_page_fallback = <span class="hljs-number">100</span>  <span class="hljs-comment"># 最大页码备用值</span><br><br>        <span class="hljs-comment"># 路径配置</span><br>        <span class="hljs-variable language_">self</span>.image_dir = <span class="hljs-string">&quot;images&quot;</span><br>        <span class="hljs-variable language_">self</span>.log_dir = <span class="hljs-string">&quot;logs&quot;</span><br>        <span class="hljs-variable language_">self</span>.log_file = <span class="hljs-string">&quot;wallhaven.log&quot;</span><br><br>        <span class="hljs-comment"># 调试模式</span><br>        <span class="hljs-variable language_">self</span>.debug_mode = <span class="hljs-literal">False</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ImprovedSpiderConfig</span>(<span class="hljs-title class_ inherited__">SpiderConfig</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;增强配置&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br>        <span class="hljs-variable language_">self</span>.max_threads = <span class="hljs-number">3</span><br>        <span class="hljs-variable language_">self</span>.proxy = <span class="hljs-literal">None</span><br><br><span class="hljs-comment"># ------------------------- 日志配置 -------------------------</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">UnicodeSafeStreamHandler</span>(logging.StreamHandler):<br>    <span class="hljs-string">&quot;&quot;&quot;安全处理控制台编码&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">emit</span>(<span class="hljs-params">self, record</span>):<br>        <span class="hljs-keyword">try</span>:<br>            msg = <span class="hljs-variable language_">self</span>.<span class="hljs-built_in">format</span>(record)<br>            stream = <span class="hljs-variable language_">self</span>.stream<br>            encoding = stream.encoding <span class="hljs-keyword">if</span> stream.encoding <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;utf-8&#x27;</span><br>            msg = msg.encode(encoding, errors=<span class="hljs-string">&#x27;replace&#x27;</span>).decode(encoding)<br>            stream.write(msg + <span class="hljs-variable language_">self</span>.terminator)<br>            <span class="hljs-variable language_">self</span>.flush()<br>        <span class="hljs-keyword">except</span> Exception:<br>            <span class="hljs-variable language_">self</span>.handleError(record)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">setup_logging</span>(<span class="hljs-params">config: ImprovedSpiderConfig</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;初始化安全的日志系统&quot;&quot;&quot;</span><br>    log_format = <span class="hljs-string">&#x27;%(asctime)s - [%(levelname)s] %(message)s&#x27;</span><br>    date_format = <span class="hljs-string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span><br><br>    os.makedirs(config.log_dir, exist_ok=<span class="hljs-literal">True</span>)<br><br>    logger = logging.getLogger()<br>    logger.handlers.clear()<br><br>    <span class="hljs-comment"># 文件处理器（UTF-8编码）</span><br>    file_handler = logging.FileHandler(<br>        filename=os.path.join(config.log_dir, config.log_file),<br>        encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span><br>    )<br>    file_handler.setFormatter(logging.Formatter(log_format, date_format))<br><br>    <span class="hljs-comment"># 控制台处理器（编码安全）</span><br>    console_handler = UnicodeSafeStreamHandler()<br>    console_handler.setFormatter(logging.Formatter(log_format, date_format))<br><br>    log_level = logging.DEBUG <span class="hljs-keyword">if</span> config.debug_mode <span class="hljs-keyword">else</span> logging.INFO<br>    logger.setLevel(log_level)<br>    file_handler.setLevel(log_level)<br>    console_handler.setLevel(log_level)<br><br>    logger.addHandler(file_handler)<br>    logger.addHandler(console_handler)<br><br><span class="hljs-comment"># ------------------------- 日志符号 -------------------------</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">LogMark</span>:<br>    <span class="hljs-string">&quot;&quot;&quot;安全日志标识符号&quot;&quot;&quot;</span><br>    START = <span class="hljs-string">&quot;=== START ===&quot;</span><br>    END = <span class="hljs-string">&quot;=== END ===&quot;</span><br>    PROCESS_PAGE = <span class="hljs-string">&quot;[PROCESS PAGE]&quot;</span><br>    FOUND_ITEMS = <span class="hljs-string">&quot;[FOUND ITEMS]&quot;</span><br>    DOWNLOAD_START = <span class="hljs-string">&quot;[DOWNLOAD]&quot;</span><br>    DOWNLOAD_SKIP = <span class="hljs-string">&quot;[SKIP]&quot;</span><br>    DOWNLOAD_SUCCESS = <span class="hljs-string">&quot;[SUCCESS]&quot;</span><br>    DOWNLOAD_FAIL = <span class="hljs-string">&quot;[FAIL]&quot;</span><br><br><span class="hljs-comment"># ------------------------- 核心爬虫 -------------------------</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">WallHavenSpider</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, config: ImprovedSpiderConfig</span>):<br>        <span class="hljs-variable language_">self</span>.config = config<br>        <span class="hljs-variable language_">self</span>.session = requests.Session()<br>        <span class="hljs-variable language_">self</span>.session.headers.update(&#123;<br>            <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36&#x27;</span>,<br>            <span class="hljs-string">&#x27;Referer&#x27;</span>: <span class="hljs-string">&#x27;https://wallhaven.cc/&#x27;</span><br>        &#125;)<br>        os.makedirs(<span class="hljs-variable language_">self</span>.config.image_dir, exist_ok=<span class="hljs-literal">True</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_random_delay</span>(<span class="hljs-params">self</span>):<br>        sleep(uniform(*<span class="hljs-variable language_">self</span>.config.delay))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_request_with_retry</span>(<span class="hljs-params">self, url: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-type">Optional</span>[html.HtmlElement]:<br>        <span class="hljs-keyword">for</span> attempt <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-variable language_">self</span>.config.retries + <span class="hljs-number">1</span>):<br>            <span class="hljs-keyword">try</span>:<br>                response = <span class="hljs-variable language_">self</span>.session.get(url, timeout=<span class="hljs-variable language_">self</span>.config.timeout)<br>                response.raise_for_status()<br>                tree = html.fromstring(response.content)<br><br>                <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.config.debug_mode:<br>                    logging.debug(<span class="hljs-string">f&quot;HTML Preview:\n<span class="hljs-subst">&#123;response.text[:<span class="hljs-number">200</span>]&#125;</span>...&quot;</span>)<br>                    logging.debug(<span class="hljs-string">f&quot;Nodes found: <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(tree.xpath(<span class="hljs-string">&#x27;//*&#x27;</span>))&#125;</span>&quot;</span>)<br><br>                <span class="hljs-keyword">if</span> tree <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(tree) == <span class="hljs-number">0</span>:<br>                    logging.warning(<span class="hljs-string">f&quot;Empty document: <span class="hljs-subst">&#123;url&#125;</span>&quot;</span>)<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>                <span class="hljs-keyword">return</span> tree<br><br>            <span class="hljs-keyword">except</span> requests.exceptions.RequestException <span class="hljs-keyword">as</span> e:<br>                logging.warning(<span class="hljs-string">f&quot;Request failed (<span class="hljs-subst">&#123;e.__class__.__name__&#125;</span>): <span class="hljs-subst">&#123;url&#125;</span>&quot;</span>)<br>                <span class="hljs-keyword">if</span> attempt == <span class="hljs-variable language_">self</span>.config.retries:<br>                    logging.error(<span class="hljs-string">f&quot;Max retries reached: <span class="hljs-subst">&#123;url&#125;</span>&quot;</span>)<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>                <span class="hljs-variable language_">self</span>._random_delay()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_get_max_page</span>(<span class="hljs-params">self, tree: html.HtmlElement</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        <span class="hljs-keyword">try</span>:<br>            pagination = tree.xpath(<span class="hljs-string">&#x27;//nav[contains(@class, &quot;pagination&quot;)]&#x27;</span>)<br>            <span class="hljs-keyword">if</span> pagination:<br>                page_buttons = pagination[<span class="hljs-number">0</span>].xpath(<span class="hljs-string">&#x27;.//a[contains(@class, &quot;pagination-link&quot;)]/text()&#x27;</span>)<br>                numeric_pages = [<span class="hljs-built_in">int</span>(p.strip()) <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> page_buttons <span class="hljs-keyword">if</span> p.strip().isdigit()]<br><br>                <span class="hljs-keyword">if</span> numeric_pages:<br>                    logging.debug(<span class="hljs-string">f&quot;Numeric pages found: <span class="hljs-subst">&#123;numeric_pages&#125;</span>&quot;</span>)<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">max</span>(numeric_pages)<br><br>                last_button = pagination[<span class="hljs-number">0</span>].xpath(<span class="hljs-string">&#x27;.//a[contains(@class, &quot;pagination-link&quot;)][last()]&#x27;</span>)<br>                <span class="hljs-keyword">if</span> last_button <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;href&#x27;</span> <span class="hljs-keyword">in</span> last_button[<span class="hljs-number">0</span>].attrib:<br>                    last_page_url = last_button[<span class="hljs-number">0</span>].attrib[<span class="hljs-string">&#x27;href&#x27;</span>]<br>                    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;page=&#x27;</span> <span class="hljs-keyword">in</span> last_page_url:<br>                        page_num = last_page_url.split(<span class="hljs-string">&#x27;page=&#x27;</span>)[-<span class="hljs-number">1</span>]<br>                        <span class="hljs-keyword">if</span> page_num.isdigit():<br>                            logging.debug(<span class="hljs-string">f&quot;Page from URL: <span class="hljs-subst">&#123;page_num&#125;</span>&quot;</span>)<br>                            <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(page_num)<br><br>            header = tree.xpath(<span class="hljs-string">&#x27;//header[h2[@class=&quot;section-header&quot;]]/h2/text()&#x27;</span>)<br>            <span class="hljs-keyword">if</span> header:<br>                parts = header[<span class="hljs-number">0</span>].split(<span class="hljs-string">&#x27;of&#x27;</span>)<br>                <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(parts) &gt; <span class="hljs-number">1</span>:<br>                    total = parts[-<span class="hljs-number">1</span>].strip()<br>                    <span class="hljs-keyword">if</span> total.isdigit():<br>                        logging.debug(<span class="hljs-string">f&quot;Total items: <span class="hljs-subst">&#123;total&#125;</span>&quot;</span>)<br>                        <span class="hljs-keyword">return</span> (<span class="hljs-built_in">int</span>(total) - <span class="hljs-number">1</span>) // <span class="hljs-number">24</span> + <span class="hljs-number">1</span><br><br>            logging.warning(<span class="hljs-string">&quot;Using fallback page strategy&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>.config.max_page_fallback<br><br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            logging.error(<span class="hljs-string">f&quot;Page parse error: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span>, exc_info=<span class="hljs-literal">True</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>.config.max_page_fallback<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_get_detail_urls</span>(<span class="hljs-params">self, tree: html.HtmlElement</span>) -&gt; <span class="hljs-built_in">list</span>:<br>        urls = tree.xpath(<span class="hljs-string">&#x27;//section[contains(@class, &quot;thumb-listing-page&quot;)]//a[contains(@class, &quot;preview&quot;)]/@href&#x27;</span>)<br>        logging.debug(<span class="hljs-string">f&quot;Detail URLs found: <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(urls)&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">return</span> urls<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_get_image_url</span>(<span class="hljs-params">self, tree: html.HtmlElement</span>) -&gt; <span class="hljs-type">Optional</span>[<span class="hljs-built_in">str</span>]:<br>        url = tree.xpath(<span class="hljs-string">&#x27;//img[@id=&quot;wallpaper&quot;]/@src&#x27;</span>)<br>        <span class="hljs-keyword">if</span> url:<br>            logging.debug(<span class="hljs-string">f&quot;Image URL found: <span class="hljs-subst">&#123;url[<span class="hljs-number">0</span>]&#125;</span>&quot;</span>)<br>            <span class="hljs-keyword">return</span> url[<span class="hljs-number">0</span>]<br>        logging.warning(<span class="hljs-string">&quot;Image URL not found&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_download_image</span>(<span class="hljs-params">self, url: <span class="hljs-built_in">str</span></span>):<br>        <span class="hljs-keyword">try</span>:<br>            filename = os.path.basename(url.split(<span class="hljs-string">&#x27;?&#x27;</span>)[<span class="hljs-number">0</span>])<br>            save_path = os.path.join(<span class="hljs-variable language_">self</span>.config.image_dir, filename)<br><br>            <span class="hljs-keyword">if</span> os.path.exists(save_path):<br>                logging.info(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;LogMark.DOWNLOAD_SKIP&#125;</span> <span class="hljs-subst">&#123;filename&#125;</span>&quot;</span>)<br>                <span class="hljs-keyword">return</span><br><br>            logging.info(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;LogMark.DOWNLOAD_START&#125;</span> <span class="hljs-subst">&#123;filename&#125;</span>&quot;</span>)<br><br>            <span class="hljs-keyword">with</span> <span class="hljs-variable language_">self</span>.session.get(url, stream=<span class="hljs-literal">True</span>, timeout=<span class="hljs-variable language_">self</span>.config.timeout) <span class="hljs-keyword">as</span> response:<br>                response.raise_for_status()<br><br>                file_size = <span class="hljs-built_in">int</span>(response.headers.get(<span class="hljs-string">&#x27;Content-Length&#x27;</span>, <span class="hljs-number">0</span>))<br>                progress = <span class="hljs-number">0</span><br><br>                <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(save_path, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                    <span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> response.iter_content(chunk_size=<span class="hljs-number">8192</span>):<br>                        <span class="hljs-keyword">if</span> chunk:<br>                            f.write(chunk)<br>                            progress += <span class="hljs-built_in">len</span>(chunk)<br>                            <span class="hljs-keyword">if</span> file_size &gt; <span class="hljs-number">0</span>:<br>                                logging.debug(<span class="hljs-string">f&quot;Progress: <span class="hljs-subst">&#123;progress&#125;</span>/<span class="hljs-subst">&#123;file_size&#125;</span> (<span class="hljs-subst">&#123;progress/file_size:<span class="hljs-number">.1</span>%&#125;</span>)&quot;</span>)<br><br>                logging.info(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;LogMark.DOWNLOAD_SUCCESS&#125;</span> <span class="hljs-subst">&#123;filename&#125;</span> (<span class="hljs-subst">&#123;progress/<span class="hljs-number">1024</span>:<span class="hljs-number">.1</span>f&#125;</span>KB)&quot;</span>)<br><br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            logging.error(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;LogMark.DOWNLOAD_FAIL&#125;</span> <span class="hljs-subst">&#123;url&#125;</span>: <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(e)&#125;</span>&quot;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self</span>):<br>        logging.info(LogMark.START)<br><br>        base_url = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;self.config.base_url&#125;</span>?q=id:<span class="hljs-subst">&#123;self.config.<span class="hljs-built_in">id</span>&#125;</span>&quot;</span><br>        logging.debug(<span class="hljs-string">f&quot;Base URL: <span class="hljs-subst">&#123;base_url&#125;</span>&quot;</span>)<br><br>        initial_tree = <span class="hljs-variable language_">self</span>._request_with_retry(base_url)<br>        <span class="hljs-keyword">if</span> initial_tree <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>            logging.error(<span class="hljs-string">&quot;Initial request failed&quot;</span>)<br>            <span class="hljs-keyword">return</span><br><br>        max_page = <span class="hljs-variable language_">self</span>._get_max_page(initial_tree)<br>        logging.debug(<span class="hljs-string">f&quot;Max pages calculated: <span class="hljs-subst">&#123;max_page&#125;</span>&quot;</span>)<br><br>        <span class="hljs-keyword">for</span> page <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, max_page + <span class="hljs-number">1</span>):<br>            page_url = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;base_url&#125;</span>&amp;page=<span class="hljs-subst">&#123;page&#125;</span>&quot;</span> <span class="hljs-keyword">if</span> page &gt; <span class="hljs-number">1</span> <span class="hljs-keyword">else</span> base_url<br>            logging.info(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;LogMark.PROCESS_PAGE&#125;</span> <span class="hljs-subst">&#123;page&#125;</span>: <span class="hljs-subst">&#123;page_url&#125;</span>&quot;</span>)<br><br>            tree = <span class="hljs-variable language_">self</span>._request_with_retry(page_url)<br>            <span class="hljs-keyword">if</span> tree <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>                logging.warning(<span class="hljs-string">f&quot;Skip invalid page: <span class="hljs-subst">&#123;page&#125;</span>&quot;</span>)<br>                <span class="hljs-keyword">continue</span><br><br>            detail_urls = <span class="hljs-variable language_">self</span>._get_detail_urls(tree)<br>            logging.info(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;LogMark.FOUND_ITEMS&#125;</span> <span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(detail_urls)&#125;</span>&quot;</span>)<br><br>            <span class="hljs-keyword">for</span> idx, url <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(detail_urls, <span class="hljs-number">1</span>):<br>                <span class="hljs-variable language_">self</span>._random_delay()<br>                logging.debug(<span class="hljs-string">f&quot;Processing <span class="hljs-subst">&#123;idx&#125;</span>/<span class="hljs-subst">&#123;<span class="hljs-built_in">len</span>(detail_urls)&#125;</span>: <span class="hljs-subst">&#123;url&#125;</span>&quot;</span>)<br>                detail_tree = <span class="hljs-variable language_">self</span>._request_with_retry(url)<br><br>                <span class="hljs-keyword">if</span> detail_tree:<br>                    <span class="hljs-keyword">if</span> image_url := <span class="hljs-variable language_">self</span>._get_image_url(detail_tree):<br>                        <span class="hljs-variable language_">self</span>._download_image(image_url)<br>                <span class="hljs-keyword">else</span>:<br>                    logging.warning(<span class="hljs-string">f&quot;Invalid detail page: <span class="hljs-subst">&#123;url&#125;</span>&quot;</span>)<br><br>        logging.info(LogMark.END)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-comment"># 初始化配置</span><br>    config = ImprovedSpiderConfig()<br>    config.<span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;48868&quot;</span><br>    config.delay = (<span class="hljs-number">0.5</span>, <span class="hljs-number">1.2</span>)<br>    config.debug_mode = <span class="hljs-literal">False</span><br>    config.max_page_fallback = <span class="hljs-number">6</span><br><br>    <span class="hljs-comment"># 配置日志系统</span><br>    setup_logging(config)<br><br>    <span class="hljs-comment"># 运行爬虫</span><br>    spider = WallHavenSpider(config)<br>    spider.run()<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Termux安装ssh和设置sshd自启</title>
    <link href="/termux-sshd-auto-start-guide/"/>
    <url>/termux-sshd-auto-start-guide/</url>
    
    <content type="html"><![CDATA[<hr><p>在 Termux 中安装并启用 OpenSSH 服务，可以方便地在其他设备上远程连接并进行操作。以下是详细步骤：</p><h3 id="安装-SSH-和远程登录"><a href="#安装-SSH-和远程登录" class="headerlink" title="安装 SSH 和远程登录"></a>安装 SSH 和远程登录</h3><h4 id="1-安装-OpenSSH"><a href="#1-安装-OpenSSH" class="headerlink" title="1. 安装 OpenSSH"></a>1. 安装 OpenSSH</h4><p>执行以下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install openssh -y<br></code></pre></td></tr></table></figure><h4 id="2-查询用户名"><a href="#2-查询用户名" class="headerlink" title="2. 查询用户名"></a>2. 查询用户名</h4><p>获取用于 SSH 登录的用户名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">whoami</span><br></code></pre></td></tr></table></figure><p><strong>输出示例</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">u0_a123<br></code></pre></td></tr></table></figure><h4 id="3-设置登录密码"><a href="#3-设置登录密码" class="headerlink" title="3. 设置登录密码"></a>3. 设置登录密码</h4><p>为当前用户设置 SSH 登录密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">passwd<br></code></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong> 需要输入两次密码（设置和确认），两次输入必须一致。</p></blockquote><p><strong>输出示例</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">New password: <br>Retype new password: <br>New password was successfully <span class="hljs-built_in">set</span>.<br></code></pre></td></tr></table></figure><h4 id="4-启动-SSH-服务"><a href="#4-启动-SSH-服务" class="headerlink" title="4. 启动 SSH 服务"></a>4. 启动 SSH 服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sshd<br></code></pre></td></tr></table></figure><h4 id="5-远程连接"><a href="#5-远程连接" class="headerlink" title="5. 远程连接"></a>5. 远程连接</h4><p>确保远程设备与手机<strong>处于同一局域网且网络互通</strong>，在远程设备上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh [你的用户名]@[手机IP地址] -p 8022<br></code></pre></td></tr></table></figure><blockquote><p>输入步骤 3 设置的密码即可成功连接。</p></blockquote><p><strong>连接成功示例</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh u0_a123@192.168.1.100 -p 8022<br>u0_a123@192.168.1.100<span class="hljs-string">&#x27;s password: </span><br><span class="hljs-string">Welcome to Termux!</span><br><span class="hljs-string">$</span><br></code></pre></td></tr></table></figure><hr><h3 id="设置-Termux-启动时自动运行-SSH"><a href="#设置-Termux-启动时自动运行-SSH" class="headerlink" title="设置 Termux 启动时自动运行 SSH"></a>设置 Termux 启动时自动运行 SSH</h3><h4 id="1-创建状态检查脚本"><a href="#1-创建状态检查脚本" class="headerlink" title="1. 创建状态检查脚本"></a>1. 创建状态检查脚本</h4><p>创建并编辑脚本文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.start_sshd.sh<br></code></pre></td></tr></table></figure><p>粘贴以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># 显示SSH连接信息</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;═══════════════════════════════════════&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;用户: <span class="hljs-subst">$(whoami)</span>&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;SSH端口: 8022&quot;</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;═══════════════════════════════════════&quot;</span><br><br><span class="hljs-comment"># 检查SSHD状态</span><br><span class="hljs-function"><span class="hljs-title">check_sshd</span></span>() &#123;<br>    <span class="hljs-keyword">if</span> pgrep -x <span class="hljs-string">&quot;sshd&quot;</span> &gt;/dev/null; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;🔵 sshd状态: \033[32m运行中 (PID: <span class="hljs-subst">$(pgrep -x <span class="hljs-string">&quot;sshd&quot;</span>)</span>)\033[0m&quot;</span><br>        <span class="hljs-built_in">return</span> 0<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;🟡 sshd状态: \033[33m未运行\033[0m&quot;</span><br>        <span class="hljs-built_in">return</span> 1<br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-comment"># 主逻辑</span><br><span class="hljs-keyword">if</span> ! check_sshd; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;▶ 尝试启动sshd...&quot;</span><br>    <span class="hljs-keyword">if</span> sshd &gt;/dev/null 2&gt;&amp;1; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">sleep</span> 1 <span class="hljs-comment"># 等待进程启动</span><br>        <span class="hljs-keyword">if</span> check_sshd; <span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\033[32m 成功\033[0m&quot;</span><br>        <span class="hljs-keyword">else</span><br>            <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\033[31m 失败 (可能端口冲突或权限问题)\033[0m&quot;</span><br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\033[31m 启动命令执行失败\033[0m&quot;</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>保存退出 (<code>Ctrl+O</code> → <code>回车</code> → <code>Ctrl+X</code>)，并赋予执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x ~/.start_sshd.sh<br></code></pre></td></tr></table></figure><h4 id="2-配置开机自启"><a href="#2-配置开机自启" class="headerlink" title="2. 配置开机自启"></a>2. 配置开机自启</h4><p>编辑 Termux 的启动配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.bashrc<br></code></pre></td></tr></table></figure><p>在文件末尾添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动时自动检查/运行SSHD</span><br>~/.start_sshd.sh<br></code></pre></td></tr></table></figure><p>保存退出，并赋予执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x ~/.bashrc<br></code></pre></td></tr></table></figure><h4 id="3-验证效果"><a href="#3-验证效果" class="headerlink" title="3. 验证效果"></a>3. 验证效果</h4><p>重启 Termux 应用后，系统将自动执行脚本，检查并启动 SSH 服务。</p><p><strong>启动后输出示例</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">═══════════════════════════════════════<br>用户: u0_a123<br>SSH端口: 8022<br>═══════════════════════════════════════<br>🟡 sshd状态: 未运行<br>▶ 尝试启动sshd... 成功<br>🔵 sshd状态: 运行中 (PID: 12345)<br></code></pre></td></tr></table></figure><p><strong>当SSH已运行时输出示例</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">═══════════════════════════════════════<br>用户: u0_a123<br>SSH端口: 8022<br>═══════════════════════════════════════<br>🔵 sshd状态: 运行中 (PID: 12345)<br></code></pre></td></tr></table></figure><hr>]]></content>
    
    
    <categories>
      
      <category>技术教程</category>
      
      <category>Termux配置</category>
      
      <category>Android开发环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Termux</tag>
      
      <tag>SSH配置</tag>
      
      <tag>OpenSSH</tag>
      
      <tag>远程连接</tag>
      
      <tag>Linux工具</tag>
      
      <tag>自启动脚本</tag>
      
      <tag>Android开发</tag>
      
      <tag>终端技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>美队负主要责任</title>
    <link href="/captain-america-primary-liability/"/>
    <url>/captain-america-primary-liability/</url>
    
    <content type="html"><![CDATA[<h1 id="原新闻"><a href="#原新闻" class="headerlink" title="原新闻"></a>原新闻</h1><p><img src="https://f004.backblazeb2.com/file/s3assets/2025/04/5F8CA0B42D0EACF13414A9854561D261.png" alt="原新闻"></p><h1 id="原场景"><a href="#原场景" class="headerlink" title="原场景"></a>原场景</h1><p><img src="https://f004.backblazeb2.com/file/s3assets/2025/04/E10C59DA46EB7B9CACFD83551C80E90E.gif" alt="原图"></p><h1 id="但"><a href="#但" class="headerlink" title="但"></a>但</h1><p><img src="https://f004.backblazeb2.com/file/s3assets/2025/04/9EC51B2099B79A22EAD75CD17D5CAC80.gif" alt="美队负主要责任"></p><p><img src="https://f004.backblazeb2.com/file/s3assets/2025/04/c6e53f3167cf1808f390aa3c20429d3d.png" alt="憋笑"></p>]]></content>
    
    
    <categories>
      
      <category>梗图</category>
      
    </categories>
    
    
    <tags>
      
      <tag>新闻</tag>
      
      <tag>美国队长</tag>
      
      <tag>GIF</tag>
      
      <tag>搞笑</tag>
      
      <tag>梗图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>游戏梗合集-LOL</title>
    <link href="/gaming-memes-compilation-lol/"/>
    <url>/gaming-memes-compilation-lol/</url>
    
    <content type="html"><![CDATA[<figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">撸养农小 农养撸老<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">农无撸无以至今日，撸无农无以终余年<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>LOL</tag>
      
      <tag>梗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>『逃离办公室の25春』📸</title>
    <link href="/escape-office-spring2025-photo/"/>
    <url>/escape-office-spring2025-photo/</url>
    
    <content type="html"><![CDATA[<hr><h1 id="『逃离办公室の25春』📸"><a href="#『逃离办公室の25春』📸" class="headerlink" title="『逃离办公室の25春』📸"></a>『逃离办公室の25春』📸</h1><p>三月的第一缕春风刚掠过🌿，正是春游好时节。当主管助理发出团建统计文档时，办公室里瞬间沸腾起来：</p><p>“那肯定是要去看熊猫啦🐼”<br>“去融创不滑雪等于没去⛷️”<br>“我已经计划好中午吃什么了🍱”</p><p>我飞快敲着键盘和朋友讨论，在七嘴八舌中得出一个暴论：”动物园都是猪饲料的味道🐷”。再加上邻桌同事那句魔性洗脑的”去融创不去滑雪等于没去”，以及我那微薄的薪水💸——好吧，东莞植物园，就决定是你了！</p><p>投票后很快建了群。因为组里人多，分成了三批：18号去植物园和动物园的，以及24号留守的”守家组”🏠。</p><span id="more"></span><h2 id="出发前的作死行为-😅"><a href="#出发前的作死行为-😅" class="headerlink" title="出发前的作死行为 😅"></a>出发前的作死行为 😅</h2><p>平时8点起床的我，特意设了7:30的闹钟⏰。但想到第二天不用上班，我放纵地刷起了小视频…这一刷就到了凌晨3点🌙。这个决定让我第二天直呲牙。</p><p>早上闹钟响起时，我挣扎了5分钟才爬起来。洗漱完出门已经8点了，匆忙赶到公司食堂吃早餐——平时很少在这吃，但想到空腹坐车会晕车🚌，还是乖乖填饱了肚子。</p><p>昨夜似乎下过小雨🌧️，地面还有些湿润的痕迹。</p><h2 id="地狱级晕车体验-🤢"><a href="#地狱级晕车体验-🤢" class="headerlink" title="地狱级晕车体验 🤢"></a>地狱级晕车体验 🤢</h2><p>去广州动物园的大巴先出发了：<br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_083321.jpg" alt="去广州动物园的大巴"></p><p>我排队靠后，只能坐最后排。叠加了熬夜+油腻早餐+堵车+后排座位等debuff，很快就晕车了😵。开窗想透气却闻到尾气，冷风又让我瑟瑟发抖❄️…到目的地时，我已经吐到脸色发白(¯―¯٥)</p><h2 id="植物园漫步-🌸"><a href="#植物园漫步-🌸" class="headerlink" title="植物园漫步 🌸"></a>植物园漫步 🌸</h2><p>稍作休整后开始步行，路上看到盛开的紫荆花：<br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_095519.jpg" alt="路上看到的紫荆花（应该没错）"><br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_095610.jpg" alt="路上看到的紫荆花2"></p><p>到达植物园入口拍了集体照后，就是自由活动时间：<br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_100133.jpg" alt="东莞植物园导游图"></p><p>说实话，预期已经放得很低了，但还是有点失望：<br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_100712.jpg" alt="园区里的风车小屋"></p><p>早春天气尚冷，只有部分花开得艳：<br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_101206.jpg" alt="开得比较艳丽的花"></p><p>就当是和朋友散步聊天了，沿途发现了一些有趣的花：<br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_103152.jpg" alt="美蕊花（查蓝心小V的）"><br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_103217.jpg" alt="美蕊花"></p><p>最引人注目的是这棵光秃秃的树，与周围绿意形成鲜明对比：<br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_105912.jpg" alt="光秃秃的树"><br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_105933.jpg" alt="光秃秃的树"></p><h2 id="人造”仙境”-☁️"><a href="#人造”仙境”-☁️" class="headerlink" title="人造”仙境” ☁️"></a>人造”仙境” ☁️</h2><p>湖边走着走着，突然闯入一片烟雾缭绕的”仙境”（虽然一眼假）：<br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_112712.jpg" alt="烟雾缭绕的&quot;仙境&quot;-1"><br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_112744.jpg" alt="烟雾缭绕的&quot;仙境&quot;-2"></p><p>不愧是”仙境”，周围的花都格外艳丽：<br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_113359.jpg" alt="花1"><br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_113416.jpg" alt="花2"><br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_114803.jpg" alt="花3"><br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_114827.jpg" alt="花4-ROW过曝版"><br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_114832.jpg" alt="花5-过曝+1"><br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_114858.jpg" alt="花6"><br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/IMG_20250318_115011.jpg" alt="花7"></p><h2 id="美食治愈时刻-🍗"><a href="#美食治愈时刻-🍗" class="headerlink" title="美食治愈时刻 🍗"></a>美食治愈时刻 🍗</h2><p>逛得差不多，晕车症状也缓解了，是时候祭出终极治愈法宝——美食！在附近广场吃了顿椰子鸡，三人餐200元，值了👍<br><img src="https://f004.backblazeb2.com/file/s3assets/2025/03/8C5BB4A5E6B64620D67DD8B77BDD1D63.png" alt="用订单截图凑一凑"></p><p>想到回程还要坐车，忍痛买了盒30+的晕车药💊，本不富裕的生活雪上加霜…</p><p>回程骑行视频：<br><video controls width="600"><br>  <source src="https://vip.123pan.cn/1812011753/oss/2503/18/video_20250318_153321.mp4" type="video/mp4"><br>  您的浏览器不支持视频播放<br></video></p><p>原图查看：<br><a href="https://www.acfun.cn/v/ac47028910">阿里云盘</a></p><hr>]]></content>
    
    
    <categories>
      
      <category>旅行</category>
      
      <category>摄影</category>
      
    </categories>
    
    
    <tags>
      
      <tag>摄影</tag>
      
      <tag>出行</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一篇文章</title>
    <link href="/1st-article/"/>
    <url>/1st-article/</url>
    
    <content type="html"><![CDATA[<h1 id="第一篇文章"><a href="#第一篇文章" class="headerlink" title="第一篇文章"></a>第一篇文章</h1><p>现在什么都没有<br>shoujigengxinyixia<br>test ssh push</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
